version: 2.1
description: An orb to publish a Python package to Google Artifact Registry
display:
  home_url: "https://www.noyo.com/"
  source_url: "https://github.com/noyo-technologies/gcp-pypi-orb"

orbs:
  orb-tools: circleci/orb-tools@9.1.1
  gcp-cli: circleci/gcp-cli@2.1.0

executors:
  default:
    description: The default executor is the CircleCI Python Convenience Image.
    docker:
      - image: cimg/python:<<parameters.version>>
    parameters:
      version:
        default: "3.7"
        description: |
            Python version to use. Take into account the versions of Python available
            from CircleCI (https://hub.docker.com/r/cimg/python/tags) as well as what
            is supported by gcloud CLI itself (https://cloud.google.com/sdk/docs/install).
        type: string

commands:
  build:
    parameters:
      build-steps:
        description: The steps to run to build the python packages.
        type: steps
        default:
          - run: python setup.py -q sdist bdist_wheel
    steps:
      - steps: << parameters.build-steps >>
  publish:
    parameters:
      google-repository:
          default: GOOGLE_REPOSITORY
          description: The name of the Google Artifact Registry to upload packages to.
          type: env_var_name
      google-location:
          default: GOOGLE_LOCATION
          description: The location of the Google Artifact Registry to upload packages to.
          type: env_var_name
      publish-steps:
        description: The steps to run to upload the python packages
        type: steps
        default:
          - run: pip install twine
          - run: twine upload dist/* --verbose --config-file .pypirc --repository $(cat .pypi-repository)
    steps:
      - orb-tools/check-env-var-param:
          command-name: Checking whether required env vars are set to retrieve Artifact Registry configuration...
          param: <<parameters.google-repository>>,<<parameters.google-location>>
      - run:
          name: Create repository configuration
          command: |
            echo ${<< parameters.google-repository >>} > .pypi-repository
            gcloud artifacts print-settings python --repository=${<< parameters.google-repository >>} --location=${<< parameters.google-location >>} | head -n -1 | tail -n +2 > .pypirc
      - steps: << parameters.publish-steps >>

jobs:
  build_and_publish_package:
    description: Build and publish a Python package to Google Artifact Registry
    executor: <<parameters.executor>>
    parameters:
        executor:
            default: default
            description: |
                Executor to use for this job. Defaults to this orb's default executor.
            type: executor
        gcloud-service-key:
          default: GCLOUD_SERVICE_KEY
          description: The gcloud service key
          type: env_var_name
        google-compute-region:
            default: GOOGLE_COMPUTE_REGION
            description: The Google compute region to connect with via the gcloud CLI
            type: env_var_name
        google-compute-zone:
            default: GOOGLE_COMPUTE_ZONE
            description: The Google compute zone to connect with via the gcloud CLI
            type: env_var_name
        google-project-id:
            default: GOOGLE_PROJECT_ID
            description: The Google project ID to connect with via the gcloud CLI
            type: env_var_name
        google-repository:
          default: GOOGLE_REPOSITORY
          description: The name of the Google Artifact Registry to upload packages to.
          type: env_var_name
        google-location:
          default: GOOGLE_LOCATION
          description: The location of the Google Artifact Registry to upload packages to.
          type: env_var_name
        google-gcloud-version:
          default: 383.0.1
          description: The version number of the gcloud CLI to install and use
          type: string
        before-build-steps:
          description: Steps to execute before build
          type: steps
          default: []
        build-steps:
          description: The steps to run to build the python packages.
          type: steps
          default:
            - run: python setup.py -q sdist bdist_wheel
        after-build-steps:
          description: Steps to execute after building
          type: steps
          default: []
        before-publish-steps:
          description: Steps to execute before publishing
          type: steps
          default: []
        publish-steps:
          description: The steps to run to upload the python packages
          type: steps
          default:
            - run: pip install twine
            - run: twine upload dist/* --verbose --config-file .pypirc --repository $(cat .pypi-repository)
        after-publish-steps:
          description: Steps to execute after publishing
          type: steps
          default: []
    steps:
      - checkout
      - gcp-cli/install:
          version: << parameters.google-gcloud-version >>
      - gcp-cli/initialize:
          gcloud-service-key: <<parameters.gcloud-service-key>>
          google-compute-region: <<parameters.google-compute-region>>
          google-compute-zone: <<parameters.google-compute-zone>>
          google-project-id: <<parameters.google-project-id>>
      - steps: << parameters.before-build-steps >>
      - build:
          build-steps: << parameters.build-steps >>
      - steps: << parameters.after-build-steps >>
      - steps: << parameters.before-publish-steps >>
      - publish:
          google-repository: << parameters.google-repository >>
          google-location: << parameters.google-location >>
          publish-steps: << parameters.publish-steps >>
      - steps: << parameters.after-publish-steps >>
